@{
    ViewData["Title"] = "Chat with Patients";
    var userID = Context.Session.GetInt32("dentistID");
    var patientID = ViewBag.PatientID;
    var messages = ViewBag.Messages;
    var patientName = ViewBag.PatientName;
    var accounts = ViewBag.Accounts as Dictionary<int, string>; // Assuming this is a dictionary with user ID as key and role as value
}

<head>
    <meta name="description" content="Đây là nơi nha sĩ dùng để trao đổi với bệnh nhân">
    <link rel="stylesheet" href="~/assets/css/sidebar.css" />
    <link rel="stylesheet" href="~/assets/css/headerAd.css" />
    <link rel="stylesheet" href="~/assets/css/dentistpatients.css" />
    <link rel="stylesheet" href="~/assets/css/specialtydash.css" />
    <link rel="stylesheet" href="~/assets/css/chat.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="msger__container">
        <div class="msger">
            <header class="msger-header">
                <div class="msger-header-title" style="font-size: 2rem">
                    <i class="fa-solid fa-comments"></i> Chat with Patients
                </div>
                <div class="msger-header-options">
                    <div class="btn-wrapper" style="font-size: 2rem;">
                        <a href="/dentist/chat/ChatList" class="back-btn">
                            Quay lại <i class="fa-solid fa-arrow-rotate-left"></i>
                        </a>
                    </div>
                </div>
            </header>

            <main class="msger-chat" id="messagesList">
                @foreach (var message in messages)
                {
                    var isSenderDentist = accounts?.ContainsKey(message.SenderId) && accounts?[message.SenderId] == "Nha Sĩ";
                    var isReceiverDentist = accounts?.ContainsKey(message.ReceiverId) && accounts?[message.ReceiverId] == "Nha Sĩ";

                    @if (isSenderDentist)
                    {
                        <div class="msg right-msg">
                            <div class="msg-img" style="background-image: url('https://firebasestorage.googleapis.com/v0/b/dental-care-3388d.appspot.com/o/Profile%2FPatient%2Fuser.png?alt=media&token=9010a4a6-0220-4d29-bb85-1fe425100744')"></div>
                            <div class="msg-bubble">
                                <div class="msg-info">
                                    <div class="msg-info-name">Bạn</div>
                                    <div class="msg-info-time">@message.Timestamp</div>
                                </div>
                                <div class="msg-text">
                                    @message.Content
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="msg left-msg">
                            <div class="msg-img" style="background-image: url('https://firebasestorage.googleapis.com/v0/b/dental-care-3388d.appspot.com/o/Profile%2FPatient%2Fuser.png?alt=media&token=9010a4a6-0220-4d29-bb85-1fe425100744')"></div>
                            <div class="msg-bubble">
                                <div class="msg-info">
                                    <div class="msg-info-name">@patientName</div>
                                    <div class="msg-info-time">@message.Timestamp</div>
                                </div>
                                <div class="msg-text">
                                    @message.Content
                                </div>
                            </div>
                        </div>
                    }
                }
            </main>

            <form class="msger-inputarea" onsubmit="sendMessage(); return false;">
                <input type="hidden" id="receiverInput" value="@patientID" />
                <input type="text" id="messageInput" class="msger-input" placeholder="Nhập tin nhắn...">
                <button type="submit" class="msger-send-btn"><i class="fa-solid fa-paper-plane"></i></button>
            </form>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.12/signalr.min.js"></script>
    <script>
        const userID = '@userID';
        const patientName = '@patientName';
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub?userID=" + encodeURIComponent(userID))
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.on("ReceiveMessage", (user, message) => {
            console.log(`Message received from ${user}: ${message}`);
            const msg = document.createElement("div");
            const isUserDentist = user === userID;
            const msgClass = isUserDentist ? "right-msg" : "left-msg";
            const userName = isUserDentist ? "Bạn" : patientName;
            const now = new Date();
            const timeString = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
            msg.classList.add("msg", msgClass);
            msg.innerHTML = `
                                <div class="msg-img" style="background-image: url('${isUserDentist ? 'https://firebasestorage.googleapis.com/v0/b/dental-care-3388d.appspot.com/o/Profile%2FPatient%2Fuser.png?alt=media&token=9010a4a6-0220-4d29-bb85-1fe425100744' : 'https://firebasestorage.googleapis.com/v0/b/dental-care-3388d.appspot.com/o/Profile%2FPatient%2Fuser.png?alt=media&token=9010a4a6-0220-4d29-bb85-1fe425100744'}')"></div>
                                <div class="msg-bubble">
                                    <div class="msg-info">
                                        <div class="msg-info-name">${userName}</div>
                                        <div class="msg-info-time">${timeString}</div>
                                    </div>
                                    <div class="msg-text">${message}</div>
                                </div>
                            `;
            document.getElementById("messagesList").appendChild(msg);
            document.getElementById("messagesList").scrollTop = document.getElementById("messagesList").scrollHeight; // Ensure scrolls to bottom
        });

        connection.start()
            .then(() => console.log("Connection established."))
            .catch(err => console.error("Connection failed: ", err.toString()));

        function sendMessage() {
            const receiver = document.getElementById("receiverInput").value;
            const message = document.getElementById("messageInput").value;
            if (!message) return;
            console.log(`Sending message to ${receiver}: ${message}`);
            connection.invoke("SendMessageToUser", receiver, message)
                .then(() => {
                    document.getElementById("messageInput").value = '';
                    console.log("Message sent successfully.");
                })
                .catch(err => console.error("Send message failed: ", err.toString()));
        }

        function scrollToBottom() {
            const messagesList = document.getElementById("messagesList");
            messagesList.scrollTop = messagesList.scrollHeight;
        }

        // Scroll to bottom when the page loads
        window.onload = scrollToBottom;

    </script>
</body>
